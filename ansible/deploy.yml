---
- name: Deploy the TGWF django admin
  hosts:
    - app_servers
    # - app1.thegreenwebfoundation.org
    # - app2.thegreenwebfoundation.org
    # - app3.thegreenwebfoundation.org
    # - hel1.thegreenwebfoundation.org
  remote_user: "deploy"
  become: false

  vars:
    project_git_repo: "git@github.com:thegreenwebfoundation/admin-portal.git"
    project_deploy_strategy: git
    project_version: "master"
    project_local_path: "../"
    project_unwanted_items:
      - .git
    project_finalize: true

    # if an app servers are behind nginx working as reverse proxy, it is not necessary to
    # run nginx on the machine
    use_nginx: false
    # setting this to true will fetch the latest version of nodejs
    install_node: false
    # run an update of our front dependencies as part of the deploy. This is better
    # handled in source control, but if the front end will not build in deployment, this
    # is a workaround
    update_front_end_deps: true

    supervisor_restart: true
    supervisor_user: "deploy"

    # flag for deciding to compile assets or not
    # this is the slowest deploy step
    compile_assets: true

    # See "dramatiq_threads" and "dramatiq_processes"
    # in the inventory

  roles:
    - f500.project_deploy

  tasks:
    - name: Set up most recent timestamps directories
      ansible.builtin.include_tasks: "_set_up_directories.yml"

    - name: Install dependencies for python and js
      ansible.builtin.include_tasks: "_install_deploy_dependencies.yml"

    - name: Assemble assets and related files
      ansible.builtin.include_tasks: "_assemble_deploy_assets.yml"
      when:
        compile_assets is true

    - name: Set up script for running workers and gunicorn, via supervisor
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: deploy
        group: deploy
        mode: "0755"
      loop:
        - { src: "run_worker.sh.j2", dest: "{{ project_root }}/current/run_worker.sh" }
        - { src: "run_gunicorn.sh.j2", dest: "{{ project_root }}/current/run_gunicorn.sh" }
      become: true
      tags:
        - supervisor

    - name: Set up supervisor entries for workers and web
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: deploy
        group: deploy
        mode: "0755"
      loop:
        - { src: "supervisor.gunicorn.conf.j2", dest: "/etc/supervisor/conf.d/{{ tgwf_domain_name }}_web.conf" }
        - { src: "supervisor.worker.conf.j2", dest: "/etc/supervisor/conf.d/{{ tgwf_domain_name }}_worker.conf" }
      become: true
      tags:
        - supervisor


    - name: Trigger restart for app with supervisor
      ansible.builtin.supervisorctl:
        name: "{{ supervisor_gunicorn_app }}:"
        state: restarted
      become: true
      when: restart_supervisor is true

    - name: Reload nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
      become: true
      when: use_nginx is true
