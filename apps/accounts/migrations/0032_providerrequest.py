# Generated by Django 3.2.16 on 2022-10-19 14:51

import apps.greencheck.models.checks
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import model_utils.fields
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('accounts', '0031_auto_20220804_1502'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('website', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Pending review', 'Pending Review'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Open', 'Open')], max_length=255)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderRequestSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.providerrequest')),
                ('services', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.hostingprovider')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRequestLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.providerrequest')),
                ('services', taggit.managers.TaggableManager(blank=True, help_text='Click the services that your organisation offers. These will be listed in the green web directory.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Services Offered')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRequestIPRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', apps.greencheck.models.checks.IpAddressField(decimal_places=0, max_digits=39)),
                ('end', apps.greencheck.models.checks.IpAddressField(decimal_places=0, max_digits=39)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.providerrequestlocation')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRequestEvidence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('link', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('type', models.CharField(choices=[('Annual report', 'Annual Report'), ('Web page', 'Web Page'), ('Certificate', 'Certificate')], max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.providerrequestlocation')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRequestASN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asn', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.providerrequestlocation')),
            ],
        ),
    ]
