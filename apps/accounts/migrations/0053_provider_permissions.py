# Generated by Django 3.2.19 on 2023-05-23 15:28

from django.db import migrations
from django.contrib.auth import get_user_model
from django.core.exceptions import FieldError
from guardian.shortcuts import assign_perm, remove_perm
from .. import permissions


def assign_object_permissions(apps, schema_editor):
    """
    Assign object-level permissions for existing Hostingprovider and Datacenter objects
    """
    db_alias = schema_editor.connection.alias

    # assign manage_datacenter
    Datacenter = apps.get_model("accounts", "Datacenter")

    for dc in Datacenter.objects.using(db_alias).filter(user__isnull=False).iterator():
        assign_perm(permissions.manage_datacenter.codename, dc.user, dc)

    # assign manage_provider
    # GOTCHA: catch a FieldError so that this migration does not fail when execued by a test runner
    User = get_user_model()
    try:
        for user in (
            User.objects.using(db_alias)
            .filter(hostingprovider__isnull=False)
            .iterator()
        ):
            assign_perm(
                permissions.manage_provider.codename, user, user.hostingprovider
            )
    except FieldError:
        pass


def remove_object_permissions(apps, schema_editor):
    """
    Remove object-level permissions for existing Hostingprovider and Datacenter objects
    """
    db_alias = schema_editor.connection.alias

    # remove manage_datacenter
    Datacenter = apps.get_model("accounts", "Datacenter")
    for dc in Datacenter.objects.using(db_alias).filter(user__isnull=False).iterator():
        remove_perm(permissions.manage_datacenter.codename, dc.user, dc)

    # remove manage_provider
    # GOTCHA: catch a FieldError so that this migration does not fail when execued by a test runner
    User = get_user_model()
    try:
        for user in (
            User.objects.using(db_alias)
            .filter(hostingprovider__isnull=False)
            .iterator()
        ):
            remove_perm(
                permissions.manage_provider.codename, user, user.hostingprovider
            )
    except FieldError:
        pass


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0052_merge_20230510_1057"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="datacenter",
            options={"permissions": [permissions.manage_datacenter.astuple()]},
        ),
        migrations.AlterModelOptions(
            name="hostingprovider",
            options={
                "permissions": [permissions.manage_provider.astuple()],
                "verbose_name": "Hosting Provider",
            },
        ),
        migrations.RunPython(
            code=assign_object_permissions, reverse_code=remove_object_permissions
        ),
    ]
