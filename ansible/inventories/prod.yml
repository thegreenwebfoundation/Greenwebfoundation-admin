---
all:
  hosts:
    app1.thegreenwebfoundation.org:
      internal_ip: "10.0.0.5"
      dramatiq_threads: 2
      dramatiq_processes: 3
    app2.thegreenwebfoundation.org:
      internal_ip: "10.0.0.4"
      dramatiq_threads: 2
      dramatiq_processes: 3
    # TODO: once we have update the worker process names we can use app3 for serving production traffic
    # letting us decommission some of the older app servers
    app3.thegreenwebfoundation.org:
      internal_ip: "10.0.0.6"
      dramatiq_threads: 1
      dramatiq_processes: 1
    app4.thegreenwebfoundation.org:
      internal_ip: "10.0.0.7"
      dramatiq_threads: 2
      dramatiq_processes: 3

  vars:
    tgwf_stage: "prod"
    tgwf_domain_name: "admin"
    project_root: "/var/www/{{ tgwf_domain_name }}.thegreenwebfoundation.org"
    project_deploy_branch: "master"
    ansible_user: "deploy"
    supervisor_user: "deploy"
    supervisor_gunicorn_app: "web_{{ tgwf_stage }}"
    supervisor_worker_job: "worker_{{ tgwf_stage }}"
    port: 9000

  # you can set child groups too
  children:
    app_servers:
      # within a child group, you need to define your hosts again
      # so it's clear which hosts you want to refer to
      hosts:
        app1.thegreenwebfoundation.org:
        app2.thegreenwebfoundation.org:
        app3.thegreenwebfoundation.org:
        app4.thegreenwebfoundation.org:
      # within the child group can define new vars which take
      # precedence over the ones further 'upstream'
      # vars:
      #   some_var: value_here
